import{highlight_default as e}from"./highlight-UIb.js";import"./nijor-V5q.js";import{component_default as i}from"./component-XPa6N.js";import{highlight_default$1 as r,section_default as o}from"./highlight-k8I.js";var t=new i(async function(){return'<section_xrqawk title="CLI"> The Nijor CLI (Command Line Interface) is a powerful tool that allows you to create, manage, and build Nijor projects directly from your terminal. The CLI is designed to be user-friendly and efficient, enabling developers to quickly set up new projects, compile code, and run development servers without the need for complex configurations. </section_xrqawk><section_xrqawk title="nijor create"> The <highlight_xrqawk>nijor create</highlight_xrqawk> command creates a new folder and generates some boilerplate code. To create a new Nijor project, type the following commands. (Write your project\'s name instead of {Appname} ) <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">nijor create {AppName}</code></pre> <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">cd {AppName}</code></pre> </section_xrqawk><section_xrqawk title="nijor dev"> The <highlight_xrqawk>nijor dev</highlight_xrqawk> command runs a development server for the Nijor Project. If the \'live_reload\' option is set to true in the <highlight_xrqawk>nijor.config.json</highlight_xrqawk>, the project will recompile whenever you make changes in the <highlight_xrqawk>src/</highlight_xrqawk> directory. <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">nijor dev</code></pre> </section_xrqawk><section_xrqawk title="nijor compile"> The <highlight_xrqawk>nijor compile</highlight_xrqawk> command compiles the all the <highlight_xrqawk>*.nijor</highlight_xrqawk> files to browser readable JS and CSS code. <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">nijor compile</code></pre> To watch for changes, type <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">nijor compile -w</code></pre> </section_xrqawk><section_xrqawk title="nijor build"> The <highlight_xrqawk>nijor build</highlight_xrqawk> command is very similar to the<highlight_xrqawk>nijor compile</highlight_xrqawk> command. The only differnce between the 2 is that <highlight_xrqawk>nijor build</highlight_xrqawk> minifies the JS code. <pre n-scope="xrqawk"><code lang="bash" n-scope="xrqawk">nijor build</code></pre> </section_xrqawk>'},async function(){r.init("highlight_xrqawk"),await r.run(),o.init("section_xrqawk"),await o.run(),e.highlightAll()});export{t as default};