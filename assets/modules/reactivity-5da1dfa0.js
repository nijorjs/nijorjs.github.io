import{$ as e,a as t}from"./highlight-f31d8d70.js";import i from"./codeblock-be73a27e.js";var n=new window.nijor.component((async function(){return'<div style="display:none;" n-scope="9h03oEo"><codesj8c4 n-scope="9h03oEo"></codesj8c4></div>\n    <sectionsj8c4 title="Reactivity" n-scope="9h03oEo">\n        In Nijor, we can define <highlightsj8c4 n-scope="9h03oEo">reactive variables</highlightsj8c4>.\n        Reactive variables are defined as properties of the window.nijor.reactiveVars object. You can use the syntax, <highlightsj8c4 n-scope="9h03oEo">window.nijor.reactiveVars[\'varname\']</highlightsj8c4> to create a reactive variable. To access the value of a reactive variable inside the template tag, use the <highlightsj8c4 n-scope="9h03oEo">{{varname}}</highlightsj8c4> syntax.\n        <codesj8c4 n-scope="9h03oEo">\n            &lt;template&gt;\n                &lt;!--To fetch the value of a reactive variable within the Nijor template, use {{variable}} --&gt;\n                &lt;!--Whenever the value of window.nijor.reactiveVars[\'count\'] changes, the value of {{count}} will automatically change--&gt;\n                &lt;button on:click="UpdateCount()"&gt;{{count}}&lt;/button&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n                window.nijor.reactiveVars[\'count\'] = 1; \n                // window.nijor.reactiveVars is a special object which contains a key-value pair of reactive variables and their values.\n                // Changes in values of reactive variables get reflected on the DOM only.\n                function UpdateCount(){\n                    window.nijor.reactiveVars[\'count\']+=1;\n                }\n            &lt;/script&gt;\n        </codesj8c4>\n    </sectionsj8c4>\n'}),(async function(){e.init("sectionsj8c4"),await e.run(),t.init("highlightsj8c4"),await t.run(),i.init("codesj8c4"),await i.run()}));export{n as default};
